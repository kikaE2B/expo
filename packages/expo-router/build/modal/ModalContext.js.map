{"version":3,"file":"ModalContext.js","sourceRoot":"","sources":["../../src/modal/ModalContext.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAC;;;AAGb,kDAA2C;AAC3C,iCASe;AACf,+CAA0D;AAC1D,+DAK8B;AAE9B,qDAAkD;AAalD,MAAM,4BAA4B,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,MAAM,CAAU,CAAC;AAW5E,MAAM,YAAY,GAAG,IAAA,qBAAa,EAA+B,SAAS,CAAC,CAAC;AAErE,MAAM,oBAAoB,GAAG,CAAC,EAAE,QAAQ,EAAqB,EAAE,EAAE;IACtE,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,IAAA,gBAAQ,EAAgB,EAAE,CAAC,CAAC;IACpE,MAAM,cAAc,GAAG,IAAA,cAAM,EAA+D;QAC1F,QAAQ,EAAE,IAAI,GAAG,EAAE;QACnB,KAAK,EAAE,IAAI,GAAG,EAAE;QAChB,IAAI,EAAE,IAAI,GAAG,EAAE;KAChB,CAAC,CAAC;IACH,MAAM,gBAAgB,GAAG,IAAA,cAAM,EAAgB,EAAE,CAAC,CAAC;IAEnD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,gBAAgB,CAAC,OAAO,KAAK,YAAY,EAAE,CAAC;YAC9C,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;oBAC9D,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAClC,CAAC;YACH,CAAC,CAAC,CAAC;YACH,gBAAgB,CAAC,OAAO,GAAG,YAAY,CAAC;QAC1C,CAAC;IACH,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAEnB,MAAM,SAAS,GAAG,IAAA,mBAAW,EAAC,CAAC,MAAmB,EAAE,EAAE;QACpD,eAAe,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IAC/C,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,WAAW,GAAG,IAAA,mBAAW,EAAC,CAAC,EAAU,EAAE,MAA8C,EAAE,EAAE;QAC7F,eAAe,CAAC,CAAC,IAAI,EAAE,EAAE;YACvB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC;YACvD,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC;gBACf,MAAM,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;gBACjC,cAAc,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC;gBAChE,OAAO,cAAc,CAAC;YACxB,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,cAAc,GAAG,IAAA,mBAAW,EAAC,CAAC,EAAU,EAAE,EAAE;QAChD,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACnE,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,iBAAiB,GAAG,IAAA,mBAAW,EAAC,CAAC,EAAU,EAAE,EAAE;QACnD,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,aAAa,GAAG,IAAA,mBAAW,EAAC,CAAC,EAAU,EAAE,EAAE;QAC/C,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAClE,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,UAAU,GAAG,IAAA,mBAAW,EAAC,CAAC,EAAU,EAAE,EAAE;QAC5C,eAAe,CAAC,CAAC,IAAI,EAAE,EAAE;YACvB,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC;YACtE,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC;gBACpB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC;YACvD,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH,iBAAiB,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,gBAAgB,GAAG,IAAA,mBAAW,EAClC,CAAC,IAA+B,EAAE,QAA8B,EAAE,EAAE;QAClE,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,IAAI,CAAC;YAAE,OAAO,GAAG,EAAE,GAAE,CAAC,CAAC;QAElE,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,OAAO,CAAC,IAAI,CAAC,kEAAkE,CAAC,CAAC;YACjF,OAAO,GAAG,EAAE,GAAE,CAAC,CAAC;QAClB,CAAC;QAED,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAE3C,OAAO,GAAG,EAAE;YACV,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAChD,CAAC,CAAC;IACJ,CAAC,EACD,EAAE,CACH,CAAC;IAEF,MAAM,MAAM,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE,CAAC,IAAA,mBAAM,GAAE,EAAE,EAAE,CAAC,CAAC;IAE3C,OAAO,CACL,CAAC,YAAY,CAAC,QAAQ,CACpB,KAAK,CAAC,CAAC;YACL,YAAY;YACZ,SAAS;YACT,UAAU;YACV,WAAW;YACX,gBAAgB;SACjB,CAAC,CACF;MAAA,CAAC,kCAAW,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CACxC;QAAA,CAAC,sCAAe,CACd,QAAQ,CAAC,CAAC,MAAM,CAAC,CACjB,aAAa,CAAC,CAAC,CAAC,CAAC,CACjB,KAAK,CAAC,CAAC,yBAAU,CAAC,YAAY,CAAC,CAC/B,YAAY,CAAC,CAAC;YACZ,MAAM,EAAE,IAAI;SACb,CAAC,CACF;UAAA,CAAC,QAAQ,CACX;QAAA,EAAE,sCAAe,CACjB;QAAA,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAC5B,CAAC,sCAAe,CACd,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CACrB,IAAI,MAAM,CAAC,SAAS,CAAC,CACrB,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CACxC,aAAa,CAAC,CAAC,CAAC,CAAC,CACjB,iBAAiB,CAAC,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC,CACpD,cAAc,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAC9C,gCAAgC,CAChC,YAAY,CAAC,CAAC;gBACZ,MAAM,EAAE,IAAI;aACb,CAAC,CACF,YAAY,CAAC,CAAC;gBACZ;oBACE,IAAI,EAAE,CAAC;oBACP,eAAe,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;iBAC9D;gBACD,MAAM,CAAC,SAAS,EAAE,KAAK;aACxB,CAAC,CACF,mBAAmB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CACpC,KAAK,CAAC,CAAC;gBACL,yBAAU,CAAC,YAAY;gBACvB;oBACE,eAAe,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;iBAC9D;aACF,CAAC,CACF,WAAW,CAAC,CAAC,GAAG,EAAE;gBAChB,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC5B,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAClC,CAAC,CAAC,CACF,QAAQ,CAAC,CAAC,GAAG,EAAE;gBACb,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACjC,CAAC,CAAC,CACF;YAAA,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,EACtC;UAAA,EAAE,sCAAe,CAAC,CACnB,CAAC,CACJ;MAAA,EAAE,kCAAW,CACf;IAAA,EAAE,YAAY,CAAC,QAAQ,CAAC,CACzB,CAAC;AACJ,CAAC,CAAC;AAzIW,QAAA,oBAAoB,wBAyI/B;AAEK,MAAM,eAAe,GAAG,GAAG,EAAE;IAClC,MAAM,OAAO,GAAG,IAAA,WAAG,EAAC,YAAY,CAAC,CAAC;IAClC,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;IAChF,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AANW,QAAA,eAAe,mBAM1B;AAEF,SAAS,qBAAqB,CAAC,MAAmB;IAChD,QAAQ,MAAM,CAAC,aAAa,EAAE,CAAC;QAC7B,KAAK,MAAM;YACT,OAAO,MAAM,CAAC;QAChB,KAAK,MAAM;YACT,OAAO,MAAM,CAAC;QAChB,KAAK,OAAO,CAAC;QACb;YACE,OAAO,mBAAmB,CAAC;IAC/B,CAAC;AACH,CAAC;AAED,SAAS,wBAAwB,CAAC,MAAmB;IACnD,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;QACtC,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC;YACvB,OAAO,kBAAkB,CAAC;QAC5B,CAAC;QACD,QAAQ,MAAM,CAAC,iBAAiB,EAAE,CAAC;YACjC,KAAK,YAAY;gBACf,OAAO,iBAAiB,CAAC;YAC3B,KAAK,gBAAgB;gBACnB,OAAO,kBAAkB,CAAC;YAC5B,KAAK,WAAW;gBACd,OAAO,WAAW,CAAC;YACrB,KAAK,WAAW;gBACd,OAAO,WAAW,CAAC;YACrB;gBACE,OAAO,iBAAiB,CAAC;QAC7B,CAAC;IACH,CAAC;IACD,QAAQ,MAAM,CAAC,iBAAiB,EAAE,CAAC;QACjC,KAAK,gBAAgB;YACnB,OAAO,kBAAkB,CAAC;QAC5B,KAAK,WAAW;YACd,OAAO,WAAW,CAAC;QACrB,KAAK,WAAW;YACd,OAAO,WAAW,CAAC;QACrB,KAAK,YAAY,CAAC;QAClB;YACE,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC;gBACvB,OAAO,kBAAkB,CAAC;YAC5B,CAAC;YACD,OAAO,iBAAiB,CAAC;IAC7B,CAAC;AACH,CAAC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,cAAc,EAAE;QACd,IAAI,EAAE,CAAC;KACR;CACF,CAAC,CAAC","sourcesContent":["'use client';\n\nimport type { NavigationProp, ParamListBase } from '@react-navigation/native';\nimport { nanoid } from 'nanoid/non-secure';\nimport {\n  createContext,\n  use,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type PropsWithChildren,\n} from 'react';\nimport { StyleSheet, type ViewProps } from 'react-native';\nimport {\n  ScreenStack,\n  ScreenStackItem,\n  type StackAnimationTypes,\n  type StackPresentationTypes,\n} from 'react-native-screens';\n\nimport { ModalComponent } from './ModalComponent';\n\nexport interface ModalConfig {\n  component: React.ReactNode;\n  parentNavigationProp: NavigationProp<ParamListBase>;\n  uniqueId: string;\n  animationType?: 'slide' | 'fade' | 'none';\n  presentationStyle?: 'fullScreen' | 'overFullScreen' | 'pageSheet' | 'formSheet';\n  transparent?: boolean;\n  viewProps?: ViewProps;\n  detents?: number[] | 'fitToContents';\n}\n\nconst ALLOWED_EVENT_TYPE_LISTENERS = ['didClose', 'close', 'show'] as const;\ntype AllowedEventTypeListeners = (typeof ALLOWED_EVENT_TYPE_LISTENERS)[number];\n\nexport interface ModalContextType {\n  modalConfigs: ModalConfig[];\n  openModal: (config: ModalConfig) => void;\n  updateModal: (id: string, config: Omit<Partial<ModalConfig>, 'uniqueId'>) => void;\n  closeModal: (id: string) => void;\n  addEventListener: (type: AllowedEventTypeListeners, callback: (id: string) => void) => () => void;\n}\n\nconst ModalContext = createContext<ModalContextType | undefined>(undefined);\n\nexport const ModalContextProvider = ({ children }: PropsWithChildren) => {\n  const [modalConfigs, setModalConfigs] = useState<ModalConfig[]>([]);\n  const eventListeners = useRef<Record<AllowedEventTypeListeners, Set<(id: string) => void>>>({\n    didClose: new Set(),\n    close: new Set(),\n    show: new Set(),\n  });\n  const prevModalConfigs = useRef<ModalConfig[]>([]);\n\n  useEffect(() => {\n    if (prevModalConfigs.current !== modalConfigs) {\n      prevModalConfigs.current.forEach((config) => {\n        if (!modalConfigs.find((c) => c.uniqueId === config.uniqueId)) {\n          emitCloseEvent(config.uniqueId);\n        }\n      });\n      prevModalConfigs.current = modalConfigs;\n    }\n  }, [modalConfigs]);\n\n  const openModal = useCallback((config: ModalConfig) => {\n    setModalConfigs((prev) => [...prev, config]);\n  }, []);\n\n  const updateModal = useCallback((id: string, config: Omit<Partial<ModalConfig>, 'uniqueId'>) => {\n    setModalConfigs((prev) => {\n      const index = prev.findIndex((c) => c.uniqueId === id);\n      if (index >= 0) {\n        const updatedConfigs = [...prev];\n        updatedConfigs[index] = { ...updatedConfigs[index], ...config };\n        return updatedConfigs;\n      }\n      return prev;\n    });\n  }, []);\n\n  const emitCloseEvent = useCallback((id: string) => {\n    eventListeners.current.close.forEach((callback) => callback(id));\n  }, []);\n\n  const emitDidCloseEvent = useCallback((id: string) => {\n    eventListeners.current.didClose.forEach((callback) => callback(id));\n  }, []);\n\n  const emitShowEvent = useCallback((id: string) => {\n    eventListeners.current.show.forEach((callback) => callback(id));\n  }, []);\n\n  const closeModal = useCallback((id: string) => {\n    setModalConfigs((prev) => {\n      const modalIndex = prev.findIndex((config) => config.uniqueId === id);\n      if (modalIndex >= 0) {\n        return prev.filter((_, index) => index < modalIndex);\n      }\n      return prev;\n    });\n    emitDidCloseEvent(id);\n  }, []);\n\n  const addEventListener = useCallback(\n    (type: AllowedEventTypeListeners, callback: (id: string) => void) => {\n      if (!ALLOWED_EVENT_TYPE_LISTENERS.includes(type)) return () => {};\n\n      if (!callback) {\n        console.warn('Passing undefined as a callback to addEventListener is forbidden');\n        return () => {};\n      }\n\n      eventListeners.current[type].add(callback);\n\n      return () => {\n        eventListeners.current[type].delete(callback);\n      };\n    },\n    []\n  );\n\n  const rootId = useMemo(() => nanoid(), []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modalConfigs,\n        openModal,\n        closeModal,\n        updateModal,\n        addEventListener,\n      }}>\n      <ScreenStack style={styles.stackContainer}>\n        <ScreenStackItem\n          screenId={rootId}\n          activityState={2}\n          style={StyleSheet.absoluteFill}\n          headerConfig={{\n            hidden: true,\n          }}>\n          {children}\n        </ScreenStackItem>\n        {modalConfigs.map((config) => (\n          <ScreenStackItem\n            key={config.uniqueId}\n            {...config.viewProps}\n            screenId={`${rootId}${config.uniqueId}`}\n            activityState={2}\n            stackPresentation={getStackPresentationType(config)}\n            stackAnimation={getStackAnimationType(config)}\n            nativeBackButtonDismissalEnabled\n            headerConfig={{\n              hidden: true,\n            }}\n            contentStyle={[\n              {\n                flex: 1,\n                backgroundColor: config.transparent ? 'transparent' : 'white',\n              },\n              config.viewProps?.style,\n            ]}\n            sheetAllowedDetents={config.detents}\n            style={[\n              StyleSheet.absoluteFill,\n              {\n                backgroundColor: config.transparent ? 'transparent' : 'white',\n              },\n            ]}\n            onDismissed={() => {\n              closeModal(config.uniqueId);\n              emitCloseEvent(config.uniqueId);\n            }}\n            onAppear={() => {\n              emitShowEvent(config.uniqueId);\n            }}>\n            <ModalComponent modalConfig={config} />\n          </ScreenStackItem>\n        ))}\n      </ScreenStack>\n    </ModalContext.Provider>\n  );\n};\n\nexport const useModalContext = () => {\n  const context = use(ModalContext);\n  if (!context) {\n    throw new Error('useModalContext must be used within a ModalContextProvider');\n  }\n  return context;\n};\n\nfunction getStackAnimationType(config: ModalConfig): StackAnimationTypes | undefined {\n  switch (config.animationType) {\n    case 'fade':\n      return 'fade';\n    case 'none':\n      return 'none';\n    case 'slide':\n    default:\n      return 'slide_from_bottom';\n  }\n}\n\nfunction getStackPresentationType(config: ModalConfig): StackPresentationTypes {\n  if (process.env.EXPO_OS === 'android') {\n    if (config.transparent) {\n      return 'transparentModal';\n    }\n    switch (config.presentationStyle) {\n      case 'fullScreen':\n        return 'fullScreenModal';\n      case 'overFullScreen':\n        return 'transparentModal';\n      case 'pageSheet':\n        return 'pageSheet';\n      case 'formSheet':\n        return 'formSheet';\n      default:\n        return 'fullScreenModal';\n    }\n  }\n  switch (config.presentationStyle) {\n    case 'overFullScreen':\n      return 'transparentModal';\n    case 'pageSheet':\n      return 'pageSheet';\n    case 'formSheet':\n      return 'formSheet';\n    case 'fullScreen':\n    default:\n      if (config.transparent) {\n        return 'transparentModal';\n      }\n      return 'fullScreenModal';\n  }\n}\n\nconst styles = StyleSheet.create({\n  stackContainer: {\n    flex: 1,\n  },\n});\n"]}